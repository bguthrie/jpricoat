h1. Jpricoat

Jpricoat is a Java library for parsing HTML and searching for nodes using CSS selectors inspired by Hpricot's API for the same. I don't do any professional Java these days, but I do use multiple JVM-hosted languages and don't want to have to pull in a specific language runtime in order to use it.

Jpricoat is built on top of the "Cobra HTML parser":http://lobobrowser.org/cobra.jsp, because it seemed nice enough and because most of the alternatives looked like kind of a pain to use.

I consider this a DSL for Java, in the sense that it is a fluent API that elides the underlying implementation details. It does not expect you to build a URL object out of a string before passing one in, and wraps its exceptions in RuntimeExceptions, because typed exceptions are stupid.

It also provides an implementation of NodeList named HumaneNodeList, because something that is called List should probably act like a Java list.

h1. Examples

h3. Java

<pre><code>
  for(Node n : new Jpricoat("http://www.google.com").search("img")) {
    System.out.println("Found image: " + node.getAttributes().getNamedItem("src"));
  }
</code></pre>

h3. Groovy

<pre><code>
  new Jpricoat("http://www.google.com").search("img").iterator().each { elt ->
    println "Found image: ${elt.'@src'}"
  }
</code></pre>

JRuby, Ioke, and Clojure examples forthcoming. But you get the picture, I'm sure.
